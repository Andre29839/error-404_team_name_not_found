{"mappings":"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","sources":["<anon>","src/js/main.js","src/js/weekly-trends.js"],"sourcesContent":["var $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequired9c8\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequired9c8\"] = parcelRequire;\n}\nparcelRequire(\"aER9F\");\nparcelRequire(\"dd1Kv\");\nparcelRequire(\"ge6e3\");\nparcelRequire(\"itgY7\");\nparcelRequire(\"7dfxV\");\nparcelRequire(\"lSnTn\");\nparcelRequire(\"hO2jc\");\n\nvar $ge6e3 = parcelRequire(\"ge6e3\");\nconst { BASIC_URL: $e64fb2242ed799fb$var$BASIC_URL, API_KEY: $e64fb2242ed799fb$var$API_KEY, trending_week: $e64fb2242ed799fb$var$trending_week, new_films: $e64fb2242ed799fb$var$new_films, movie_detailes: $e64fb2242ed799fb$var$movie_detailes } = (0, $ge6e3.refs);\nconst $e64fb2242ed799fb$var$IMG_URL = \"https://image.tmdb.org/t/p/original/\";\nconst $e64fb2242ed799fb$var$refsMonth = {\n    wrapper: document.querySelector(\".month-wrapper\"),\n    addToLibraryBtn: document.querySelector('button[data-action=\"save\"]'),\n    container: document.querySelector(\".container-img-weekly\"),\n    removeLibraryBtn: document.querySelector(\".remove-from-library\")\n};\n$e64fb2242ed799fb$var$refsMonth.addToLibraryBtn.addEventListener(\"click\", $e64fb2242ed799fb$var$onOpenLibraryBtn);\n$e64fb2242ed799fb$var$refsMonth.removeLibraryBtn.addEventListener(\"click\", $e64fb2242ed799fb$var$onRemoveFromLibrary);\nlet $e64fb2242ed799fb$var$filmInStorage = JSON.parse(localStorage.getItem((0, $ge6e3.LIBRARY_KEY))) || [];\nlet $e64fb2242ed799fb$var$toStorage;\nasync function $e64fb2242ed799fb$var$fetchTrendingMonthMovies() {\n    try {\n        const url = `${$e64fb2242ed799fb$var$BASIC_URL}${$e64fb2242ed799fb$var$new_films}?api_key=${$e64fb2242ed799fb$var$API_KEY}`;\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data.results.length === 0) return;\n        const randomIndex = Math.floor(Math.random() * data.results.length);\n        $e64fb2242ed799fb$var$toStorage = data.results[randomIndex];\n        return [\n            $e64fb2242ed799fb$var$toStorage\n        ];\n    } catch (error) {\n        console.log(\"Error fetching or rendering movies:\", error);\n        const errorMarkup = `<p class=\"error-text\">Oops...<br> Something went wrong.<br> Please try again later.</p>`;\n        $e64fb2242ed799fb$var$refsMonth.addToLibraryBtn.classList.add(\"visually-hidden\");\n        $e64fb2242ed799fb$var$refsMonth.wrapper.insertAdjacentHTML(\"afterbegin\", errorMarkup);\n        return;\n    }\n}\nfunction $e64fb2242ed799fb$var$onOpenLibraryBtn() {\n    const movieId = $e64fb2242ed799fb$var$toStorage.id;\n    const filmInStorage = JSON.parse(localStorage.getItem((0, $ge6e3.LIBRARY_KEY))) || [];\n    const existingMovieIndex = filmInStorage.findIndex((el)=>el.id === movieId);\n    if (existingMovieIndex) {\n        filmInStorage.push($e64fb2242ed799fb$var$toStorage);\n        localStorage.setItem((0, $ge6e3.LIBRARY_KEY), JSON.stringify(filmInStorage));\n        $e64fb2242ed799fb$var$refsMonth.addToLibraryBtn.classList.add(\"visually-hidden\");\n        $e64fb2242ed799fb$var$refsMonth.removeLibraryBtn.classList.remove(\"visually-hidden\");\n    } else {\n        filmInStorage.splice(existingMovieIndex, 1);\n        localStorage.setItem((0, $ge6e3.LIBRARY_KEY), JSON.stringify(filmInStorage));\n        $e64fb2242ed799fb$var$refsMonth.addToLibraryBtn.classList.remove(\"visually-hidden\");\n        $e64fb2242ed799fb$var$refsMonth.removeLibraryBtn.classList.add(\"visually-hidden\");\n    }\n}\nfunction $e64fb2242ed799fb$var$onRemoveFromLibrary(evt) {\n    const movieIdToRemove = evt.currentTarget.dataset.action;\n    const filmInStorage = JSON.parse(localStorage.getItem((0, $ge6e3.LIBRARY_KEY))) || [];\n    const movieIndexToRemove = filmInStorage.findIndex((elem)=>elem.id === Number(movieIdToRemove));\n    if (movieIndexToRemove) {\n        filmInStorage.splice(movieIndexToRemove, 1);\n        localStorage.setItem((0, $ge6e3.LIBRARY_KEY), JSON.stringify(filmInStorage));\n        $e64fb2242ed799fb$var$updateLibraryButton(movieIdToRemove);\n    }\n}\nasync function $e64fb2242ed799fb$export$c5604fa8028da00(movieId) {\n    const urlGenres = `${$e64fb2242ed799fb$var$BASIC_URL}${$e64fb2242ed799fb$var$movie_detailes}${movieId}?api_key=${$e64fb2242ed799fb$var$API_KEY}`;\n    const response = await fetch(urlGenres);\n    const datas = await response.json();\n    const genres = datas.genres.slice(0, 2).map(({ name: name })=>name).join(\", \");\n    return genres;\n}\nlet $e64fb2242ed799fb$var$shownMovieIds = [];\nasync function $e64fb2242ed799fb$var$fetchTrendingMovies() {\n    const url = `${$e64fb2242ed799fb$var$BASIC_URL}${$e64fb2242ed799fb$var$trending_week}?api_key=${$e64fb2242ed799fb$var$API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    let numberOfImages = 3;\n    if (window.innerWidth < 768) numberOfImages = 1;\n    else if (window.innerWidth >= 768 && window.innerWidth < 1280) numberOfImages = 3;\n    const arrayFilms = [];\n    for(let i = 0; i < numberOfImages; i += 1){\n        let randomIndex;\n        do randomIndex = Math.floor(Math.random() * data.results.length);\n        while ($e64fb2242ed799fb$var$shownMovieIds.includes(data.results[randomIndex].id));\n        $e64fb2242ed799fb$var$shownMovieIds.push(data.results[randomIndex].id);\n        arrayFilms.push(data.results[randomIndex]);\n    }\n    return arrayFilms;\n}\nasync function $e64fb2242ed799fb$export$b96939513a47e81() {\n    try {\n        const movies = await $e64fb2242ed799fb$var$fetchTrendingMovies();\n        $e64fb2242ed799fb$var$renderPageMarkup(movies);\n    } catch (error) {\n        console.log(\"Error fetching or rendering movies:\", error);\n    }\n}\n$e64fb2242ed799fb$export$b96939513a47e81();\nasync function $e64fb2242ed799fb$var$renderPageMarkup(array) {\n    let markupLibrary = \"\";\n    for (const elem of array){\n        const { title: title, id: id, poster_path: poster_path, release_date: release_date, overview: overview, vote_average: vote_average } = elem;\n        const movieWeekGenre = await $e64fb2242ed799fb$export$c5604fa8028da00(id);\n        const WEEK_IMG_URL = \"https://image.tmdb.org/t/p/original/\";\n        markupLibrary += `<li class=\"movie-card open-modal\" data-movie-id=\"${id}\">\n         <div class=\"gradient\"></div>\n         <img class=\"movie-img\" src=\"${WEEK_IMG_URL}${poster_path}\" alt=\"${overview}\" loading=\"lazy\" />\n         <div class=\"info\">\n        <div class=\"name-and-discr\">\n         <p class=\"movie-title\">\n         ${title}\n         </p>\n         <p class=\"movie-description\">\n         ${movieWeekGenre} | ${release_date.slice(0, 4)}\n         </p></div>\n         <div class=\"rating-body stars\">\n      <div class=\"rating-active\" style=\"width:${vote_average * 10}%\"></div>\n    </div>\n  </div>\n         </li>`;\n    }\n    $e64fb2242ed799fb$var$refsMonth.container.insertAdjacentHTML(\"beforeend\", markupLibrary);\n}\nasync function $e64fb2242ed799fb$var$renderMonthMarkup() {\n    try {\n        const monthMovies = await $e64fb2242ed799fb$var$fetchTrendingMonthMovies();\n        $e64fb2242ed799fb$var$renderTrendingMonthMarkup(monthMovies);\n        $e64fb2242ed799fb$var$updateLibraryButton(monthMovies);\n    } catch (error) {\n        console.log(\"Error fetching or rendering movies:\", error);\n    }\n}\n$e64fb2242ed799fb$var$renderMonthMarkup();\nasync function $e64fb2242ed799fb$var$renderTrendingMonthMarkup(array) {\n    let markup = \"\";\n    for (const movie of array){\n        const { title: title, id: id, backdrop_path: backdrop_path, release_date: release_date, vote_average: vote_average, vote_count: vote_count, popularity: popularity, overview: overview, poster_path: poster_path } = movie;\n        const movieGenre = await $e64fb2242ed799fb$export$c5604fa8028da00(id);\n        markup += `<li data-id=\"${id}\" class=\"js-card-month\">\n    <img width=\"280px\" heigth=\"402px\" src=\"${window.innerWidth < 768 ? $e64fb2242ed799fb$var$IMG_URL + poster_path : $e64fb2242ed799fb$var$IMG_URL + backdrop_path}\" alt=\"${overview}\" class=\"month-img\"></img>\n      </li>\n      <div class = \"wrapper-month\">\n      <h4 class=\"month-title-movie\">${title}</h4>\n      <div class=\"wrapper-month-section\">\n      <ul class=\"trends-wrapper\"> \n      <p class=\"release-text\">Release date</p>\n      <p class=\"vote-text\">Vote / Votes</p>\n      <p class=\"popularity-text\">Popularity</p>\n      <p class=\"genre-text\">Genre</p>\n      </ul>  \n      <ul class=\"trends-wrapper-second\"> \n      <p class=\"descr-release-text\">${release_date}</p>\n      <p class=\"descr-vote-text\"><span class=\"vote-numbers\">${vote_average}</span> / <span class=\"votes-numbers\">${vote_count}</span></p>\n      <p class=\"descr-popularity-text\">${popularity.toFixed(1)}</p>\n      <p class=\"descr-genre-text\">${movieGenre}</p>\n      </ul>  \n      </div>\n      <p class=\"about-text\">ABOUT</p>\n      <p class=\"description-text\">${overview}</p>\n      </div>`;\n        $e64fb2242ed799fb$var$updateLibraryButton(movie);\n    }\n    $e64fb2242ed799fb$var$refsMonth.wrapper.insertAdjacentHTML(\"beforeend\", markup);\n}\nfunction $e64fb2242ed799fb$var$updateLibraryButton(movie) {\n    const movieId = typeof movie === \"number\" ? movie : movie.id;\n    const filmInStorage = JSON.parse(localStorage.getItem((0, $ge6e3.LIBRARY_KEY))) || [];\n    const existingMovieIndex = filmInStorage.findIndex((el)=>el.id === movieId);\n    if (existingMovieIndex === -1) {\n        $e64fb2242ed799fb$var$refsMonth.addToLibraryBtn.classList.remove(\"visually-hidden\");\n        $e64fb2242ed799fb$var$refsMonth.removeLibraryBtn.classList.add(\"visually-hidden\");\n    } else {\n        $e64fb2242ed799fb$var$refsMonth.addToLibraryBtn.classList.add(\"visually-hidden\");\n        $e64fb2242ed799fb$var$refsMonth.removeLibraryBtn.classList.remove(\"visually-hidden\");\n    }\n}\n\n\nparcelRequire(\"gOgzM\");\nparcelRequire(\"5hhfL\");\n\n\n//# sourceMappingURL=index.097cb2fe.js.map\n","import \"./animation-scroll.js\";\nimport \"./mobile-menu.js\";\nimport \"./helpers.js\";\nimport \"./modal-menu.js\"\nimport \"./hero_markup.js\";\nimport \"./hero_app.js\";\nimport \"./trailer.js\"\nimport \"./weekly-trends.js\";\nimport \"./switch-btn.js\"\nimport \"./modal-footer.js\"\n","import { refs, LIBRARY_KEY } from './helpers';\n\nconst { BASIC_URL, API_KEY, trending_week, new_films, movie_detailes } = refs;\nconst IMG_URL = 'https://image.tmdb.org/t/p/original/';\n\nconst refsMonth = {\n  wrapper: document.querySelector('.month-wrapper'),\n  addToLibraryBtn: document.querySelector('button[data-action=\"save\"]'),\n  container: document.querySelector('.container-img-weekly'),\n  removeLibraryBtn: document.querySelector('.remove-from-library'),\n};\n\nrefsMonth.addToLibraryBtn.addEventListener('click', onOpenLibraryBtn);\nrefsMonth.removeLibraryBtn.addEventListener('click', onRemoveFromLibrary);\n\nlet filmInStorage = JSON.parse(localStorage.getItem(LIBRARY_KEY)) || [];\n\nlet toStorage;\n\n  async function fetchTrendingMonthMovies() {\n    try {\n      const url = `${BASIC_URL}${new_films}?api_key=${API_KEY}`;\n      const response = await fetch(url);\n      const data = await response.json();\n  \n      if (data.results.length === 0) {\n        return;\n      } \n      const randomIndex = Math.floor(Math.random() * data.results.length);\n      toStorage = data.results[randomIndex];\n      return [toStorage];\n    } catch (error) {\n      console.log('Error fetching or rendering movies:', error);\n      const errorMarkup = `<p class=\"error-text\">Oops...<br> Something went wrong.<br> Please try again later.</p>`;\n      refsMonth.addToLibraryBtn.classList.add('visually-hidden')\n    refsMonth.wrapper.insertAdjacentHTML('afterbegin', errorMarkup);\n\n      return;\n    }\n  }\n\nfunction onOpenLibraryBtn() {\n  const movieId = toStorage.id;\n\n  const filmInStorage = JSON.parse(localStorage.getItem(LIBRARY_KEY)) || [];\n  const existingMovieIndex = filmInStorage.findIndex(el => el.id === movieId);\n\n  if (existingMovieIndex) {\n    filmInStorage.push(toStorage);\n    localStorage.setItem(LIBRARY_KEY, JSON.stringify(filmInStorage));\n    refsMonth.addToLibraryBtn.classList.add('visually-hidden');\n    refsMonth.removeLibraryBtn.classList.remove('visually-hidden');\n  } else {\n    filmInStorage.splice(existingMovieIndex, 1);\n    localStorage.setItem(LIBRARY_KEY, JSON.stringify(filmInStorage));\n    refsMonth.addToLibraryBtn.classList.remove('visually-hidden');\n    refsMonth.removeLibraryBtn.classList.add('visually-hidden');\n  }\n}\n\nfunction onRemoveFromLibrary(evt) {\n  const movieIdToRemove = evt.currentTarget.dataset.action;\n\n  const filmInStorage = JSON.parse(localStorage.getItem(LIBRARY_KEY)) || [];\n\n  const movieIndexToRemove = filmInStorage.findIndex(\n    elem => elem.id === Number(movieIdToRemove)\n  );\n\n  if (movieIndexToRemove) {\n    filmInStorage.splice(movieIndexToRemove, 1);\n    localStorage.setItem(LIBRARY_KEY, JSON.stringify(filmInStorage));\n    updateLibraryButton(movieIdToRemove);\n  }\n}\n\nexport async function getGenres(movieId) {\n  const urlGenres = `${BASIC_URL}${movie_detailes}${movieId}?api_key=${API_KEY}`;\n  const response = await fetch(urlGenres);\n  const datas = await response.json();\n  const genres = datas.genres\n    .slice(0, 2)\n    .map(({ name }) => name)\n    .join(', ');\n  return genres;\n}\n\nlet shownMovieIds = [];\n\nasync function fetchTrendingMovies() {\n  const url = `${BASIC_URL}${trending_week}?api_key=${API_KEY}`;\n  const response = await fetch(url);\n  const data = await response.json();\n\n  let numberOfImages = 3;\n\n  if (window.innerWidth < 768) {\n    numberOfImages = 1;\n  } else if (window.innerWidth >= 768 && window.innerWidth < 1280) {\n    numberOfImages = 3;\n  }\n\n  const arrayFilms = [];\n  for (let i = 0; i < numberOfImages; i += 1) {\n    let randomIndex;\n\n    do {\n      randomIndex = Math.floor(Math.random() * data.results.length);\n    } while (shownMovieIds.includes(data.results[randomIndex].id));\n\n    shownMovieIds.push(data.results[randomIndex].id);\n    arrayFilms.push(data.results[randomIndex]);\n  }\n  return arrayFilms;\n}\n\nexport async function renderAndAppendMarkup() {\n  try {\n    const movies = await fetchTrendingMovies();\n    renderPageMarkup(movies);\n  } catch (error) {\n    console.log('Error fetching or rendering movies:', error);\n  }\n}\nrenderAndAppendMarkup();\n\nasync function renderPageMarkup(array) {\n  let markupLibrary = '';\n  for (const elem of array) {\n    const { title, id, poster_path, release_date, overview, vote_average } =\n      elem;\n    const movieWeekGenre = await getGenres(id);\n    const WEEK_IMG_URL = 'https://image.tmdb.org/t/p/original/';\n    markupLibrary += `<li class=\"movie-card open-modal\" data-movie-id=\"${id}\">\n         <div class=\"gradient\"></div>\n         <img class=\"movie-img\" src=\"${WEEK_IMG_URL}${poster_path}\" alt=\"${overview}\" loading=\"lazy\" />\n         <div class=\"info\">\n        <div class=\"name-and-discr\">\n         <p class=\"movie-title\">\n         ${title}\n         </p>\n         <p class=\"movie-description\">\n         ${movieWeekGenre} | ${release_date.slice(0, 4)}\n         </p></div>\n         <div class=\"rating-body stars\">\n      <div class=\"rating-active\" style=\"width:${vote_average * 10}%\"></div>\n    </div>\n  </div>\n         </li>`;\n  }\n  refsMonth.container.insertAdjacentHTML('beforeend', markupLibrary);\n}\n\nasync function renderMonthMarkup() {\n  try {\n    const monthMovies = await fetchTrendingMonthMovies();\n    renderTrendingMonthMarkup(monthMovies);\n    updateLibraryButton(monthMovies);\n  } catch (error) {\n    console.log('Error fetching or rendering movies:', error);\n  }\n}\nrenderMonthMarkup();\n\nasync function renderTrendingMonthMarkup(array) {\n  let markup = '';\n  for (const movie of array) {\n    const {\n      title,\n      id,\n      backdrop_path,\n      release_date,\n      vote_average,\n      vote_count,\n      popularity,\n      overview,\n      poster_path\n    } = movie;\n\n    const movieGenre = await getGenres(id);\n\n    markup += `<li data-id=\"${id}\" class=\"js-card-month\">\n    <img width=\"280px\" heigth=\"402px\" src=\"${window.innerWidth < 768 ? IMG_URL + poster_path : IMG_URL + backdrop_path}\" alt=\"${overview}\" class=\"month-img\"></img>\n      </li>\n      <div class = \"wrapper-month\">\n      <h4 class=\"month-title-movie\">${title}</h4>\n      <div class=\"wrapper-month-section\">\n      <ul class=\"trends-wrapper\"> \n      <p class=\"release-text\">Release date</p>\n      <p class=\"vote-text\">Vote / Votes</p>\n      <p class=\"popularity-text\">Popularity</p>\n      <p class=\"genre-text\">Genre</p>\n      </ul>  \n      <ul class=\"trends-wrapper-second\"> \n      <p class=\"descr-release-text\">${release_date}</p>\n      <p class=\"descr-vote-text\"><span class=\"vote-numbers\">${vote_average}</span> / <span class=\"votes-numbers\">${vote_count}</span></p>\n      <p class=\"descr-popularity-text\">${popularity.toFixed(1)}</p>\n      <p class=\"descr-genre-text\">${movieGenre}</p>\n      </ul>  \n      </div>\n      <p class=\"about-text\">ABOUT</p>\n      <p class=\"description-text\">${overview}</p>\n      </div>`;\n    updateLibraryButton(movie);\n  }\n  refsMonth.wrapper.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction updateLibraryButton(movie) {\n  const movieId = typeof movie === 'number' ? movie : movie.id;\n  const filmInStorage = JSON.parse(localStorage.getItem(LIBRARY_KEY)) || [];\n\n  const existingMovieIndex = filmInStorage.findIndex(el => el.id === movieId);\n\n  if (existingMovieIndex === -1) {\n    refsMonth.addToLibraryBtn.classList.remove('visually-hidden');\n    refsMonth.removeLibraryBtn.classList.add('visually-hidden');\n  } else {\n    refsMonth.addToLibraryBtn.classList.add('visually-hidden');\n    refsMonth.removeLibraryBtn.classList.remove('visually-hidden');\n  }\n}"],"names":["$e64fb2242ed799fb$var$toStorage","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$ge6e3","BASIC_URL","$e64fb2242ed799fb$var$BASIC_URL","API_KEY","$e64fb2242ed799fb$var$API_KEY","trending_week","$e64fb2242ed799fb$var$trending_week","new_films","$e64fb2242ed799fb$var$new_films","movie_detailes","$e64fb2242ed799fb$var$movie_detailes","refs","$e64fb2242ed799fb$var$IMG_URL","$e64fb2242ed799fb$var$refsMonth","wrapper","document","querySelector","addToLibraryBtn","container","removeLibraryBtn","$e64fb2242ed799fb$var$fetchTrendingMonthMovies","url","response","fetch","data","json","results","length","randomIndex","Math","floor","random","error","console","log","classList","add","insertAdjacentHTML","$e64fb2242ed799fb$export$c5604fa8028da00","movieId","urlGenres","datas","genres","slice","map","name","join","addEventListener","filmInStorage","JSON","parse","localStorage","getItem","LIBRARY_KEY","existingMovieIndex","findIndex","el","push","setItem","stringify","remove","splice","evt","movieIdToRemove","currentTarget","dataset","action","movieIndexToRemove","elem","Number","$e64fb2242ed799fb$var$updateLibraryButton","$e64fb2242ed799fb$var$shownMovieIds","$e64fb2242ed799fb$var$fetchTrendingMovies","numberOfImages","innerWidth","arrayFilms","i","includes","$e64fb2242ed799fb$var$renderPageMarkup","array","markupLibrary","title","poster_path","release_date","overview","vote_average","movieWeekGenre","$e64fb2242ed799fb$var$renderTrendingMonthMarkup","markup","movie","backdrop_path","vote_count","popularity","movieGenre","toFixed","$e64fb2242ed799fb$export$b96939513a47e81","movies","$e64fb2242ed799fb$var$renderMonthMarkup","monthMovies"],"version":3,"file":"index.097cb2fe.js.map"}